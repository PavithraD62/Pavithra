exp4

1.Open the folder that contains the maven project, and there you need to open the command prompt.

Here we need to inintialize the gradle, then choose to build gradle project from maven project, and choose the DSL Script as Groovy, then for to build the generate build using new API choose no then the maven to gradle conversion will be succcessfull
2. gradle init
    yes
    2
    no   

3.In intellij open the maven project folder(in intellij),Here we can see the in the maven project the build.gradle fill will be added

4. update build.gradle file
   
     id 'application'
     
     application {
    mainClass = 'org.example.Main'  // Specify the main class
}
jar {
    manifest {
        attributes(
                'Main-Class': 'org.example.Main' // Specify the main class here as well
        )
    }
}
     

5. In terminal:
       ./gradlew build
       cd build
       cd libs
       ls
       java -jar sample_vtricks-1.0-SNAPSHOT.jar

#complete build.gradle file
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'application'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    testImplementation libs.org.junit.jupiter.junit.jupiter.api
}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'sample_vtricks'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
application {
    mainClass = 'org.example.Main'  // Specify the main class
}
jar {
    manifest {
        attributes(
                'Main-Class': 'org.example.Main' // Specify the main class here as well
        )
    }
}
